<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.groupcotton.common.base.dao.AccountMapper">

	
	
	
  <select id="getAccountByUsername" parameterType="string" resultType="Account">
    SELECT account_id ,
        	account_code ,
        	account_name ,
        	password ,
        	company_id ,
        	dept_id ,
        	email ,
        	status ,
        	addr1 ,
        	addr2 ,
        	phone  FROM  sys_account!    where account_code = #{value}
  </select>
  
  

  <select id="getAccountByUsernameAndPassword" parameterType="Account" resultType="Account">
    SELECT account_id ,
        	account_code ,
        	account_name ,
        	password ,
        	company_id ,
        	dept_id ,
        	email ,
        	status ,
        	addr1 ,
        	addr2 ,
        	phone  FROM  sys_account    where account_code = #{accountcode} and password=#{password}
  </select>
	
  <select id="getCount" parameterType="Account" resultType="int">
    SELECT count(*) FROM  sys_account    
  </select>
  
  
  <select id="getPageList" parameterType="Account" resultType="Account">
		SELECT 
        	account_id ,
        	account_code ,
        	account_name ,
        	password ,
        	company_id ,
        	dept_id ,
        	email ,
        	status ,
        	addr1 ,
        	addr2 ,
        	phone 
		FROM sys_account
  </select>

  <select id="getAccountByID" parameterType="string" resultType="Account">
		SELECT 
        	account_id ,
        	account_code ,
        	account_name ,
        	password ,
        	company_id ,
        	dept_id ,
        	email ,
        	status ,
        	addr1 ,
        	addr2 ,
        	phone 
		FROM sys_account
		where
        account_id = #{id} 
  </select>
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insertAccount" parameterType="Account" >
    
        INSERT INTO sys_account (
        	account_id ,
        	account_code ,
        	account_name ,
        	password ,
        	company_id ,
        	dept_id ,
        	email ,
        	status ,
        	addr1 ,
        	addr2 ,
        	phone 
        ) VALUES (
        	#{accountId} ,
        	#{accountCode} ,
        	#{accountName} ,
        	#{password} ,
        	#{companyId} ,
        	#{deptId} ,
        	#{email} ,
        	#{status} ,
        	#{addr1} ,
        	#{addr2} ,
        	#{phone} 
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="updateAccount" parameterType="Account" >
     
        UPDATE sys_account SET
	        account_code = #{accountCode} ,
	        account_name = #{accountName} ,
	        password = #{password} ,
	        company_id = #{companyId} ,
	        dept_id = #{deptId} ,
	        email = #{email} ,
	        status = #{status} ,
	        addr1 = #{addr1} ,
	        addr2 = #{addr2} ,
	        phone = #{phone} 
        WHERE 
	        account_id = #{accountId} 
    
	</update>

    <delete id="deleteAccount" parameterType="java.util.List">
     
        DELETE FROM sys_account WHERE
        account_id  in 
		
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">

		 # {item}

		</foreach>
		
     
		
    </delete>
    
    
	
</mapper>

